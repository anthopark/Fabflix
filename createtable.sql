DROP DATABASE IF EXISTS moviedb;
CREATE DATABASE moviedb;
USE moviedb;

CREATE TABLE IF NOT EXISTS stars(
	id VARCHAR(10) PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	birthYear INTEGER
);

CREATE TABLE IF NOT EXISTS movies(
	id VARCHAR(10) PRIMARY KEY,
	title VARCHAR(100) NOT NULL DEFAULT '',
	year INTEGER NOT NULL,
	director VARCHAR(100) NOT NULL DEFAULT ''
);

CREATE TABLE IF NOT EXISTS stars_in_movies(
	starId VARCHAR(10) NOT NULL DEFAULT '',
	movieId VARCHAR(10) NOT NULL DEFAULT '',
	FOREIGN KEY (starId) REFERENCES stars(id)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (movieId) REFERENCES movies(id)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS genres(
	id INTEGER PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR(32)
);

CREATE TABLE IF NOT EXISTS genres_in_movies(
	genreId INTEGER NOT NULL,
	movieId VARCHAR(10) NOT NULL,
	FOREIGN KEY (genreId) REFERENCES genres(id)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (movieId) REFERENCES movies(id)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS creditcards(
	id VARCHAR(20) PRIMARY KEY,
	firstName VARCHAR(50) NOT NULL DEFAULT '',
	lastName VARCHAR(50) NOT NULL DEFAULT '',
	expiration DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS customers(
	id INTEGER PRIMARY KEY AUTO_INCREMENT,
	firstName VARCHAR(50) NOT NULL DEFAULT '',
	lastName VARCHAR(50) NOT NULL DEFAULT '',
	ccId VARCHAR(20) NOT NULL DEFAULT '',
	address VARCHAR(200) NOT NULL DEFAULT '',
	email VARCHAR(50) NOT NULL DEFAULT '',
	password VARCHAR(20) NOT NULL DEFAULT '',
	FOREIGN KEY (ccId) REFERENCES creditcards(id)
		ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS sales(
	id INTEGER PRIMARY KEY AUTO_INCREMENT,
	customerId INTEGER NOT NULL,
	movieId VARCHAR(10) NOT NULL,
	saleDate DATE NOT NULL,
	FOREIGN KEY (customerId) REFERENCES customers(id)
		ON DELETE RESTRICT ON UPDATE RESTRICT,
	FOREIGN KEY (movieId) REFERENCES movies(id)
		ON DELETE RESTRICT ON UPDATE RESTRICT
);



CREATE TABLE IF NOT EXISTS ratings(
	movieId VARCHAR(10) NOT NULL,
	ratings FLOAT NOT NULL,
	numVotes INTEGER NOT NULL,
	FOREIGN KEY (movieId) REFERENCES movies(id) 
		ON DELETE CASCADE ON UPDATE CASCADE
);